Netzwerk-Architektur
====================

\index{NSFNet}
Um ein so komplexes System wie das Internet zu entwickeln und zu bauen, versuchen Ingenieure, ein einzelnes anspruchsvolles Problem in eine Reihe kleinerer Probleme zu zerlegen, die unabhängig voneinander gelöst und dann wieder zusammengefügt werden können, um das ursprüngliche große Problem zu lösen. Die Ingenieure, die das erste Internet gebaut haben, haben das Gesamtproblem in vier grundlegende Unterprobleme aufgeteilt, die unabhängig voneinander von verschiedenen Gruppen bearbeitet werden konnten.

![Das Vier-Schichten-TCP/IP-Modell](../images/layers)


\index{Link-Schicht}
\index{Internetwork Layer}
\index{Transportschicht}
\index{Anwendungsschicht}
Sie gaben diesen vier Bereichen der Technik die folgenden Namen: (1) Link, (2) Internetwork, (3) Transport und (4) Application.  Wir stellen uns diese verschiedenen Bereiche als übereinander gestapelte Schichten vor, wobei sich die Verbindungsschicht unten und die Anwendungsschicht oben befindet.  Die Verbindungsschicht befasst sich mit der drahtgebundenen oder drahtlosen Verbindung von Ihrem Computer zum lokalen Netzwerk und die Anwendungsschicht ist das, womit wir als Endbenutzer interagieren.   Ein Webbrowser ist ein Beispiel für eine Anwendung in dieser Internet-Architektur.

\index{TCP-Modell}
Wir bezeichnen dieses Modell informell als "TCP/IP-Modell" in Anlehnung an das Transport Control Protocol (TCP), das zur Implementierung der Transportschicht verwendet wird, und das Internet Protocol (IP), das zur Implementierung der Internet-Netzwerkschicht verwendet wird.

Wir werden einen kurzen Blick auf jede der Schichten werfen, beginnend mit dem "Boden" des Stacks.

Die Verbindungsschicht
--------------

Die Verbindungsschicht ist dafür verantwortlich, Ihren Computer mit dem lokalen Netzwerk zu verbinden und die Daten über einen einzelnen Hop zu übertragen. Die heute am häufigsten verwendete Technologie der Sicherungsschicht ist die drahtlose Vernetzung. Wenn Sie ein drahtloses Gerät verwenden, sendet das Gerät Daten nur über eine begrenzte Entfernung. Ein Smartphone kommuniziert mit einem Sendemast, der ein paar Kilometer entfernt ist. Wenn Sie Ihr Smartphone in einem Zug benutzen, muss es alle paar Minuten zu einem neuen Tower wechseln, wenn der Zug fährt. Ein Laptop, der mit einem WiFi-Netzwerk verbunden ist, kommuniziert normalerweise mit einer Basisstation innerhalb von 200 Metern. Ein Desktop-Computer, der über eine kabelgebundene Verbindung angeschlossen ist, verwendet in der Regel ein Kabel, das 100 Meter lang oder kürzer ist. Link-Layer-Technologien werden oft von mehreren Computern am selben Ort gemeinsam genutzt.

Die Verbindungsschicht muss zwei grundlegende Probleme lösen, wenn es um diese gemeinsam genutzten lokalen Netzwerke geht. Das erste Problem besteht darin, wie die Daten kodiert und über die Verbindung gesendet werden können. Wenn die Verbindung drahtlos ist, müssen sich die Ingenieure darauf einigen, welche Funkfrequenzen für die Datenübertragung verwendet werden sollen und wie die digitalen Daten im Funksignal kodiert werden sollen. Bei verdrahteten Verbindungen müssen sie sich darauf einigen, welche Spannung auf der Leitung verwendet werden soll und wie schnell die Bits über die Leitung gesendet werden sollen. Bei Link-Layer-Technologien, die Glasfaser verwenden, müssen sie sich darauf einigen, welche Lichtfrequenzen verwendet werden und wie schnell die Daten gesendet werden sollen.

Sie müssen sich nicht nur darauf einigen, wie sie Daten über ein gemeinsam genutztes Medium, wie z. B. ein drahtloses Netzwerk, senden, sondern auch darauf, wie sie mit anderen Computern zusammenarbeiten, die möglicherweise zur gleichen Zeit Daten senden möchten. Wenn alle Computer im Netzwerk versuchen würden, immer dann zu senden, wenn sie Daten zu senden haben, würden ihre Nachrichten kollidieren. Das Ergebnis wäre ein Chaos, und die Empfangsstationen würden nur Rauschen empfangen. Wir müssen also einen fairen Weg finden, damit jede Station warten kann, bis sie an der Reihe ist, das gemeinsame Netzwerk zu nutzen.

Die Idee, eine große Nachricht in Pakete aufzuteilen und dann jedes Paket einzeln zu senden, macht diese gemeinsame Nutzung einfacher. Wenn nur ein Computer Daten senden möchte, 
wird er seine Pakete direkt nacheinander senden und seine Daten so schnell wie möglich über das Netzwerk transportieren. Wenn jedoch drei Computer gleichzeitig Daten senden wollen, sendet jeder Computer ein Paket und wartet dann, während die anderen beiden Computer Pakete senden. Nachdem jeder der anderen Computer ein Paket gesendet hat, sendet der erste Computer sein nächstes Paket. Auf diese Weise teilen sich die Computer den Zugriff auf das Netzwerk auf faire Weise.

Aber woher weiß ein Computer, ob andere Computer zur gleichen Zeit Daten senden wollen?  Ingenieure haben eine ausgeklügelte Methode entwickelt, um dieses Problem zu lösen. 
"Carrier Sense Multiple Access with Collision Detection", oder CSMA/CD. Es ist ein langer Name für ein einfaches und elegantes Konzept.  Wenn Ihr Computer Daten senden möchte, hört er zunächst ab, ob ein anderer Computer bereits Daten im Netzwerk sendet (Carrier Sense). Wenn kein anderer Computer Daten sendet, beginnt Ihr Computer, seine Daten zu senden. Während der Computer Daten sendet, hört er auch ab, ob er seine eigenen Daten empfangen kann. Wenn Ihr Computer seine eigenen Daten empfängt, weiß er, dass der Kanal noch frei ist und sendet weiter. Wenn jedoch zwei Computer etwa zur gleichen Zeit mit dem Senden begonnen haben, kollidieren die Daten, und Ihr Computer empfängt seine eigenen Daten nicht. Wenn eine Kollision erkannt wird, hören beide Computer auf zu senden, warten ein bisschen und versuchen die Übertragung erneut. Die beiden Computer, die kollidiert sind, warten unterschiedlich lange, um ihre Übertragungen zu wiederholen, um die Wahrscheinlichkeit einer zweiten Kollision zu verringern.

![Carrier Sense/Kollisionserkennung](../sketchnote/Link_CSMA)

Wenn Ihr Computer das Senden eines Datenpakets beendet hat, macht er eine Pause, um anderen Computern, die gewartet haben, die Möglichkeit zu geben, Daten zu senden. Wenn ein anderer Computer feststellt, dass Ihr Computer das Senden von Daten beendet hat (Carrier Sense) und mit dem Senden seines eigenen Pakets beginnt, erkennt Ihr Computer die Nutzung des Netzwerks durch den anderen Computer und wartet, bis das Paket dieses Computers abgeschlossen ist, bevor er versucht, sein nächstes Paket zu senden.

Dieser einfache Mechanismus funktioniert gut, wenn nur ein Computer Daten senden möchte. Er funktioniert auch gut, wenn viele Computer gleichzeitig Daten senden wollen. Wenn nur ein Computer Daten sendet, kann dieser Computer das gemeinsam genutzte Netzwerk gut ausnutzen, indem er Pakete nacheinander sendet, und wenn viele Computer das gemeinsam genutzte Netzwerk gleichzeitig nutzen wollen, erhält jeder Computer einen fairen Anteil an der Verbindung.

Einige Verbindungsschichten, wie z. B. eine Mobilfunkverbindung für ein Smartphone, eine WiFi-Verbindung oder ein Satelliten- oder Kabelmodem, sind gemeinsam genutzte Verbindungen und benötigen Techniken wie CSMA/CD, um einen fairen Zugang für die vielen verschiedenen Computer zu gewährleisten, die mit dem Netzwerk verbunden sind. Andere Verbindungsschichten wie Glasfaserkabel und Standleitungen werden in der Regel nicht gemeinsam genutzt und werden für Verbindungen zwischen Routern verwendet. Diese nicht gemeinsam genutzten Verbindungen sind immer noch Teil der Verbindungsschicht.

Die Ingenieure, die an Technologien für die Verbindungsschicht arbeiten, konzentrieren sich auf die Lösung der Probleme, damit Computer Daten über eine einzige Verbindung übertragen können, deren Entfernung von wenigen Metern bis zu Hunderten von Kilometern reicht. Um jedoch Daten über größere Entfernungen zu übertragen, müssen wir unsere Pakete durch mehrere Router schicken, die durch mehrere Verbindungsschichten verbunden sind. Jedes Mal, wenn unser Paket eine andere Verbindungsschicht von einem Router zu einem anderen durchläuft, nennen wir das einen "Hop". Um Daten um die halbe Welt zu schicken, müssen sie etwa
20 Router passieren, also 20 "Hops" machen.

Die Internet-Netzwerkschicht (IP)
---------------------------

Sobald Ihr Paket, das für das Internet bestimmt ist, die erste Verbindung überquert hat, befindet es sich in einem Router. Ihr Paket hat eine Quell- und eine Zieladresse, und der Router muss sich die Zieladresse ansehen, um herauszufinden, wie er Ihr Paket am besten an sein Ziel weiterleiten kann. Da jeder Router Pakete verarbeitet, die für einen von vielen Milliarden Zielcomputern bestimmt sind, ist es nicht möglich, dass jeder Router den genauen Standort und die beste Route zu jedem möglichen Zielcomputer kennt. Also macht der Router seine beste Vermutung, wie er Ihr Paket näher an sein Ziel bringen kann.

Jeder der anderen Router entlang des Weges tut ebenfalls sein Bestes, um Ihr Paket näher an den Zielcomputer zu bringen. Je näher das Paket seinem endgültigen Ziel kommt, desto besser wissen die Router, wohin das Paket gehen muss. Wenn das Paket den letzten Link auf seiner Reise erreicht, weiß die Verbindungsschicht genau, wohin Ihr Paket gesendet werden soll.

Wir verwenden einen ähnlichen Ansatz, um uns selbst zu routen, wenn wir in den Urlaub fahren. Eine Urlaubsreise hat auch viele Sprünge. Der erste Schritt ist vielleicht die Fahrt mit dem Auto oder mit dem Taxi oder Bus zum Bahnhof. Dann nehmen Sie einen Nahverkehrszug von Ihrer Kleinstadt in eine größere Stadt. In der größeren Stadt nehmen Sie einen Fernzug in eine große Stadt in einem anderen Land. Dann nehmen Sie einen weiteren Nahverkehrszug zu dem kleinen Dorf, in dem Sie Ihren Urlaub verbringen werden. Wenn Sie aus dem Zug aussteigen, nehmen Sie einen Bus, und wenn Sie aus dem Bus aussteigen, gehen Sie zu Fuß zu Ihrem Hotel.

Wenn Sie im Zug zwischen zwei großen Städten sitzen und den Schaffner nach dem genauen Standort Ihres Hotels in dem kleinen Dorf fragen würden, würde der Schaffner das nicht wissen. Der Schaffner weiß nur, wie er Sie näher an Ihr Ziel bringen kann, und solange Sie sich im Fernzug befinden, ist das alles, was zählt. Wenn Sie an Ihrem Zielort in den Bus einsteigen, können Sie den Busfahrer fragen, welche Haltestelle Ihrem Hotel am nächsten ist. Und wenn Sie an der richtigen Haltestelle aussteigen, können Sie wahrscheinlich eine Person auf der Straße fragen, wo das Hotel zu finden ist, und erhalten eine genaue Antwort.

Je weiter Sie von Ihrem Ziel entfernt sind, desto weniger müssen Sie die genauen Details des Weges dorthin kennen. Wenn Sie weit weg sind, müssen Sie nur noch wissen, wie Sie "näher" an Ihr Ziel kommen. Router im Internet funktionieren auf die gleiche Weise. Nur die Router, die dem Zielcomputer am nächsten sind, kennen den genauen Pfad zu diesem Computer. Alle Router in der Mitte der Reise arbeiten daran, Ihre Nachricht näher an das Ziel zu bringen.

Aber genau wie bei einer Reise können unerwartete Probleme oder Verzögerungen auftreten, die eine Änderung der Pläne erfordern, während Ihre Pakete durch das Netzwerk gesendet werden.

![A Multi-Step Trip](../sketchnote/Multiple_step_trip)

Router tauschen spezielle Nachrichten aus, um sich gegenseitig über jede Art von Verkehrsverzögerung oder Netzwerkausfall zu informieren, so dass Pakete von einer Route, die nicht mehr funktioniert, auf eine andere Route umgeschaltet werden können. Die Router, die den Kern des Internets bilden, sind intelligent und passen sich schnell sowohl an kleine als auch an große Ausfälle oder Störungen von Netzwerkverbindungen an. Manchmal verlangsamt sich eine Verbindung, weil sie überlastet ist. Ein anderes Mal wird eine Verbindung physisch unterbrochen, wenn ein Bautrupp versehentlich ein vergrabenes Kabel ausgräbt und es durchtrennt. Manchmal kommt es zu einer Naturkatastrophe wie einem Hurrikan oder Taifun, der die Router und Verbindungen in einem großen geografischen Gebiet lahmlegt. Die Router erkennen diese Ausfälle schnell und leiten sie, wenn möglich, um.

Aber manchmal geht etwas schief und Pakete gehen verloren. Der Umgang mit verlorenen Paketen ist der Grund für die nächste Schicht in unserer Architektur.

Die Transportschicht (TCP)
-------------------------

Die Internetwork-Schicht ist sowohl einfach als auch komplex. Sie sieht sich die Zieladresse eines Pakets an und findet einen Weg über mehrere Netzwerksprünge, um das Paket an den Zielcomputer zu liefern. Aber manchmal gehen diese Pakete verloren oder sind stark verzögert. Ein anderes Mal kommen die Pakete nicht in der richtigen Reihenfolge am Ziel an, weil ein späteres Paket einen schnelleren Weg durch das Netzwerk gefunden hat als ein früheres Paket. Jedes Paket enthält die Adresse des Quellcomputers, die Adresse des Zielcomputers und einen Offset, der angibt, wo dieses Paket relativ zum Anfang der Nachricht "passt".
relativ zum Anfang der Nachricht. Wenn der Zielcomputer den Offset jedes Pakets vom Anfang der Nachricht und die Länge des Pakets kennt, kann er die ursprüngliche Nachricht rekonstruieren, selbst wenn die Pakete in falscher Reihenfolge empfangen wurden.

\index{acknowledgements}
\index{ACK}
Während der Zielcomputer die Nachricht rekonstruiert und an die empfangende Anwendung liefert, sendet er in regelmäßigen Abständen eine Bestätigung an den Quellcomputer zurück, die angibt, wie viel von der Nachricht er empfangen und rekonstruiert hat. Wenn der Zielcomputer jedoch feststellt, dass Teile der rekonstruierten Nachricht fehlen, bedeutet dies wahrscheinlich, dass diese Pakete verloren gegangen oder stark verzögert worden sind. Nachdem er ein wenig gewartet hat, sendet der Zielcomputer
eine Aufforderung an den Quellcomputer, die Daten, die zu fehlen scheinen, erneut zu senden.

Der sendende Computer muss eine Kopie der gesendeten Teile der ursprünglichen Nachricht speichern, bis der Zielcomputer den erfolgreichen Empfang der Pakete bestätigt. Sobald der Quellcomputer die Bestätigung des erfolgreichen Empfangs eines Teils der Nachricht erhält, kann er die bestätigten Daten verwerfen und weitere Daten senden.

\index{window size}
\index{courtesy}
Die Menge der Daten, die der Quellcomputer sendet, bevor er auf eine Bestätigung wartet, wird als "Fenstergröße" bezeichnet. Wenn die Fenstergröße zu klein ist, wird die Datenübertragung verlangsamt, da der Quellcomputer immer auf Bestätigungen wartet. Wenn der Quellcomputer zu viele Daten sendet, bevor er auf eine Bestätigung wartet, kann er ungewollt Verkehrsprobleme verursachen, indem er Router oder Fernkommunikationsleitungen überlastet. Dieses Problem wird dadurch gelöst, dass die Fenstergröße zu Beginn klein gehalten wird und die Zeit gemessen wird, wie lange es dauert, bis die ersten Bestätigungen eingehen. Wenn die Bestätigungen schnell zurückkommen, erhöht der Quellcomputer langsam die Fenstergröße, und wenn die Bestätigungen langsam zurückkommen, hält der Quellcomputer die Fenstergröße klein, um das Netzwerk nicht zu überlasten. Genau wie auf der Verbindungsschicht trägt auch im Internet ein wenig Höflichkeit dazu bei, eine gute Nutzung der gemeinsamen Netzwerkinfrastruktur zu gewährleisten.

\index{flow control}
Diese Strategie bedeutet, dass, wenn das Netzwerk über Hochgeschwindigkeitsverbindungen verfügt und leicht belastet ist, die Daten schnell gesendet werden, und wenn das Netzwerk stark belastet ist oder über langsame Verbindungen verfügt, werden die Daten verlangsamt, um den Beschränkungen der Netzwerkverbindungen zwischen Quell- und Zielcomputer zu entsprechen.

Die Anwendungsschicht
---------------------

\index{Anwendungsschicht}
\index{Schicht!Anwendung}
Die Verbindungs-, die Internetwork- und die Transportschicht arbeiten zusammen, um Daten schnell und zuverlässig zwischen zwei Computern über ein gemeinsames Netzwerk von Netzwerken zu bewegen. Mit dieser Fähigkeit, Daten zuverlässig zu bewegen, stellt sich als nächstes die Frage, welche vernetzten Anwendungen gebaut werden, um diese Netzwerkverbindungen zu nutzen.

\index{remote log in}
Als das erste weit verbreitete Internet Mitte der 1980er Jahre entstand, ermöglichten die ersten Netzwerkanwendungen den Benutzern, sich bei entfernten Computern anzumelden, Dateien zwischen Computern zu übertragen, E-Mails zwischen Computern zu senden und sogar Textchats in Echtzeit zwischen Computern durchzuführen.

\index{Web}
\index{CERN}
In den frühen 1990er Jahren, als das Internet für immer mehr Menschen zugänglich wurde und sich die Fähigkeiten von Computern, Bilder zu verarbeiten, verbesserten, wurde die World Wide Web-Anwendung von Wissenschaftlern der Hochenergiephysikeinrichtung CERN entwickelt. Das Web konzentrierte sich auf das Lesen und Bearbeiten von vernetzten Hypertext-Dokumenten mit Bildern. Heute ist das Web die am häufigsten genutzte Netzwerkanwendung auf der ganzen Welt.  Aber auch alle anderen älteren Internet-Anwendungen sind noch weit verbreitet.

\index{client}
\index{server}
\index{client-server}
\index{URL}
\index{Uniform Resource Locator}
Jede Anwendung wird im Allgemeinen in zwei Hälften unterteilt. Die eine Hälfte der Anwendung wird als "Server" bezeichnet. Sie läuft auf dem Zielcomputer und wartet auf eingehende Netzwerkverbindungen. Die andere Hälfte der Anwendung wird als "Client" bezeichnet und läuft auf dem Quellcomputer. Wenn Sie mit Software wie Firefox, Chrome oder Internet Explorer im Internet surfen, führen Sie eine "Web-Client"-Anwendung aus, die Verbindungen zu Webservern herstellt und die auf diesen Webservern gespeicherten Seiten und Dokumente anzeigt. Die Uniform Resource Locators (URLs), die Ihr Webbrowser in seiner Adressleiste anzeigt, sind die Webserver, die Ihr Client kontaktiert, um Dokumente für Sie zur Ansicht abzurufen.

Wenn wir die Serverhälfte und die Clienthälfte einer vernetzten Anwendung entwickeln, müssen wir auch ein "Anwendungsprotokoll" definieren, das beschreibt, wie die beiden Hälften der Anwendung Nachrichten über das Netzwerk austauschen werden. Die für jede Anwendung verwendeten Protokolle sind recht unterschiedlich und auf die Bedürfnisse der jeweiligen Anwendung spezialisiert.  Später werden wir einige dieser Protokolle der Anwendungsschicht untersuchen.

Stapeln der Schichten
-------------------

\index{Schichtenmodell}
Normalerweise werden die vier verschiedenen Schichten (Verbindungsschicht, Internetnetzwerk, Transportschicht und Anwendungsschicht) übereinander gestapelt dargestellt, wobei sich die Anwendungsschicht oben und die Verbindungsschicht unten befindet. Der Grund für diese Darstellung ist, dass jede Schicht die darüber und darunter liegenden Schichten nutzt, um eine vernetzte Kommunikation zu erreichen.

Alle vier Schichten laufen auf Ihrem Computer, auf dem Sie die Client-Anwendung
(z. B. ein Browser), und alle vier Schichten laufen auch auf dem Zielcomputer, auf dem der Anwendungsserver ausgeführt wird. Sie als Endbenutzer interagieren mit den Anwendungen, die die oberste Schicht des Stacks bilden, und die unterste Schicht stellt die WiFi-, Mobilfunk- oder Kabelverbindung zwischen Ihrem Computer und dem Rest des Internets dar.

Die Router, die Ihre Pakete weiterleiten, um sie an ihr Ziel zu bringen, haben keine Ahnung von der Transport- oder Anwendungsschicht. Router arbeiten auf der Internetwork- und Link-Schicht. Die Quell- und Zieladressen auf der Internetwork-Schicht sind alles, was die Router brauchen, um Ihre Pakete über eine Reihe von Links (Hops) zum Ziel zu bringen. Die Transport- und Anwendungsschicht kommen erst ins Spiel, nachdem die Internetwork-Schicht Ihre Pakete an den Zielcomputer geliefert hat.

Wenn Sie Ihre eigene vernetzte Anwendung schreiben wollten, würden Sie wahrscheinlich nur mit der Transportschicht sprechen und sich nicht um die Internetwork- und Link-Schicht kümmern. Sie sind zwar für die Funktion der Transportschicht unerlässlich, aber wenn Sie Ihr Programm schreiben, müssen Sie sich nicht mit den Details der unteren Schichten befassen. Das Netzwerkschichtenmodell macht es einfacher, vernetzte Anwendungen zu schreiben, weil so viele der komplexen Details der Datenübertragung von einem Computer zum anderen ignoriert werden können.

In den nächsten Kapiteln werden wir diese vier Schichten näher erläutern.

Glossar
--------

**Client**:
In einer vernetzten Anwendung ist die Client-Anwendung diejenige, die Dienste anfordert oder Verbindungen initiiert.

**Glasfaseroptik**:
Eine Datenübertragungstechnologie, die Daten mit Licht kodiert und das Licht über einen sehr langen Strang aus dünnem Glas oder Kunststoff sendet. Glasfaserverbindungen sind schnell und können sehr große Entfernungen überbrücken.

**Offset**: Die relative Position eines Pakets innerhalb einer Gesamtnachricht oder eines Datenstroms.

**Server**:
In einer vernetzten Anwendung ist die Server-Anwendung diejenige, die auf Anfragen nach Diensten antwortet oder auf eingehende Verbindungen wartet.

**Fenstergröße**: Die Datenmenge, die der sendende Computer senden darf 
senden darf, bevor er auf eine Quittung wartet.


Fragen
---------

Sie können dieses Quiz online unter http://www.net-intro.com/quiz/ bearbeiten.

1. Warum verwenden Ingenieure ein "Modell", um ihren Ansatz zu organisieren 
ein großes und komplexes Problem zu lösen?
a) Weil es ihnen erlaubt, etwas Kleines zu bauen und es in einem Windkanal zu testen
b) Weil das Reden über ein Modell den eigentlichen Beginn der harten Arbeit verzögert
c) Weil sie ein Problem in eine Reihe von kleineren Problemen aufteilen können, die 
die unabhängig voneinander gelöst werden können
d) Weil es bei der Entwicklung von Marketingmaterialien hilft

2. Welche ist die oberste Schicht des Netzwerkmodells, das von TCP/IP-Netzwerken verwendet wird?
a) Anwendung
b) Transport
c) Internet-Netzwerk
d) Verbindung

3. Welche der Schichten beschäftigt sich damit, ein Datenpaket über eine einzelne physikalische Verbindung zu bekommen?
a) Anwendung
b) Transport
c) Internet-Netzwerk
d) Verbindung

4. Wofür steht die Abkürzung CSMA/CD?
a) Carrier Sense Multiple Access mit Kollisionserkennung
b) Collision Sense Media Access mit kontinuierlicher Richtungserkennung
c) Correlated Space Media Allocation with Constant Division
d) Constant State Multiple Address Channel Divison

5. Was ist das Ziel der Internetwork-Schicht?
a) Sicherstellen, dass keine Daten auf dem Weg dorthin verloren gehen
b) Ein Datenpaket über mehrere Netzwerke hinweg von der Quelle zum Ziel zu bringen
c) Sicherstellen, dass nur eingeloggte Benutzer das Internet nutzen können
d) Sicherstellen, dass WiFi fair über mehrere Computer verteilt wird

6. Was wird neben den Daten, der Quell- und der Zieladresse noch benötigt, um sicherzustellen, dass eine Nachricht wieder zusammengesetzt werden kann, wenn sie ihr Ziel erreicht?
a) Ein Offset, der angibt, wohin das Paket relativ zum Anfang der Nachricht gehört
b) Einen Ort, an den die Daten zu senden sind, wenn der Zielcomputer ausgefallen ist
c) Eine komprimierte und unkomprimierte Version der Daten im Paket
d) Die GPS-Koordinaten des Zielcomputers

7. Was ist die "Fenstergröße"?
a) Die Summe aus Länge und Breite eines Pakets
b) Die maximale Größe eines einzelnen Pakets
c) Die maximale Anzahl von Paketen, aus denen eine Nachricht bestehen kann
d) Die maximale Datenmenge, die ein Computer senden kann, bevor er eine Quittung erhält

8. In einer typischen vernetzten Client/Server-Anwendung, wo läuft die Client-Anwendung?
a) Auf Ihrem Laptop, Desktop oder mobilen Computer
b) Auf einem drahtlosen Zugangspunkt
c) Auf dem nächstgelegenen Router
d) In einem Unterwasser-Glasfaserkabel

9. Wofür steht URL?
a) Universelle Routing-Verknüpfung
b) Einheitliche Rückübertragungslogik
c) Einheitlicher Ressourcen-Locator
d) Einheitliche Wiederherstellungsliste




